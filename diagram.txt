@startuml
skinparam componentStyle uml2
skinparam shadowing false

' --- Actors ---
actor User
actor Manager

' --- UGC Block ---
rectangle "UGC" {
    [Views Proxy]
    database "Kafka"
    [Views ETL]
    database "Clickhouse"
}

' --- AsyncAPI Block ---
rectangle "AsyncAPI" {
    [Async Api]
    database "ElasticSearch"
    database "Async_cache"
}

' --- Admin Block ---
rectangle "Admin" {
    [Admin Panel] as AdminPanel
    database "Admin_pg"
    [ETL]
}

' --- Auth Block ---
rectangle "Auth Service" {
    [Auth]
    database "Auth_pg"
    database "Auth-cache"
}

' --- Notification Block ---
rectangle "Notification System" {
    [Notification Generator]
    [Notification API]
    [Email Sender]
    database "notification_pg"
    database "RabbitMQ"
}

' --- Billing & Subscription Block ---
rectangle "Billing & Subscription" {
    [Billing]
    [Subscribe Service]
    [Subscribe Controller]
    database "billing_pg"
    database "subscribe_pg"
}

' --- Client ---
[Client]

' --- Admin Panel ---
Manager --> AdminPanel : Adds\nmovies
AdminPanel --> [Admin_pg] : Edits\ncontent
AdminPanel --> [Auth] : Authorization

' --- Auth ---
[Auth] --> [Auth_pg] : Updates\nusers, roles
[Auth] --> [Auth-cache] : Stores\ntokens
[Client] --> [Auth] : Registration\nand tokens

' --- Async API ---
[Async Api] --> [Auth] : Authorization
[ETL] --> [ElasticSearch] : Writes\nfilms
[ETL] --> [Admin_pg] : Reads\nfilms
[Client] --> [Async Api] : Fetches\ncontent
[Async Api] --> [ElasticSearch] : Reads\nfilms
[Async Api] --> [Async_cache] : Cache

' --- Client & Viewing ---
User --> [Client] : Uses\nthe service
Manager --> [Client] : Registers
[Client] --> [Views Proxy] : Viewing\nprogress
[Views Proxy] --> [Kafka] : Sends\nmessages
[Kafka] --> [Views ETL] : Passes\nmessages
[Views ETL] --> [Clickhouse] : Saves\nin batches

' --- Notifications & Email ---
[Notification Generator] --> [Notification API] : Gets\ndata
[Notification Generator] --> [RabbitMQ] : Publishes\nemail tasks
[Email Sender] --> [RabbitMQ] : Consumes\nemail tasks
[Email Sender] --> [RabbitMQ] : Publishes\nstatus
[Billing] --> [Notification API] : Payment data
[Auth] --> [Notification API] : Auth data
[Notification API] --> [RabbitMQ] : Consumes\nstatus
[Notification API] --> [notification_pg]

' --- Subscription & Billing System ---
[Client] --> [Subscribe Service] : Subscribes
[Subscribe Controller] --> [Subscribe Service] : Schedules\nrequests
[Subscribe Service] --> [subscribe_pg]
[Client] --> [Billing] : Payment/status
[Billing] --> [Auth] : Authorization
[Billing] --> [billing_pg]
[Billing] --> [Subscribe Service] : Subscription\nCRUD

@enduml
