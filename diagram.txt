@startuml
skinparam componentStyle uml2
skinparam shadowing false

' --- Акторы ---
actor User
actor Manager

' --- UGC Block ---
rectangle "UGC" {
    [Views Proxy]
    database "Kafka"
    [Views ETL]
    database "Clickhouse"
}

' --- AsyncAPI Block ---
rectangle "AsyncAPI" {
    [Async Api]
    database "ElasticSearch"
    database "Async_cache"
}

' --- Admin Block ---
rectangle "Admin" {
    [Admin Panel] as AdminPanel
    database "Admin_pg"
    [ETL]
}

' --- Auth Block ---
rectangle "Auth Service" {
    [Auth]
    database "Auth_pg"
    database "Auth-cache"
}

' --- Billing Block ---
rectangle "Billing Service" {
    [Billing]
    database "billing_pg"
}

' --- Notification Block ---
rectangle "Notification System" {
    [Notification Generator]
    [Notification API]
    database "notification_pg"
}

' --- Email Block ---
rectangle "Email System" {
    [Email Sender]
}

' --- RabbitMQ ---
rectangle "RabbitMQ" {
    [emails_queue] as q_emails
    [email_status_queue] as q_status
}

' --- Subscribe Block ---
rectangle "Subscription System" {
    [Subscribe Service]
    [Subscribe Controller]
    database "subscribe_pg"
}

' --- Клиент ---
[Client]

' --- Admin Panel ---
Manager --> AdminPanel : Добавляет\nфильмы
AdminPanel --> [Admin_pg] : Редактирует\nконтент
AdminPanel --> [Auth] : Авторизация

' --- Auth ---
[Auth] --> [Auth_pg] : Обновляет\nusers, roles
[Auth] --> [Auth-cache] : Запись\ntokenов
[Client] --> [Auth] : Регистрация\nи токены

' --- Async API ---
[Async Api] --> [Auth] : Авторизация
[ETL] --> [ElasticSearch] : Запись\nfilms
[ETL] --> [Admin_pg] : Чтение\nfilms
[Client] --> [Async Api] : Получение\nконтента
[Async Api] --> [ElasticSearch] : Чтение\nfilms
[Async Api] --> [Async_cache] : Cache

' --- Клиент и просмотр ---
User --> [Client] : Пользуется\nсервисом
Manager --> [Client] : Регистрация
[Client] --> [Views Proxy] : Прогресс\nпросмотра
[Views Proxy] --> [Kafka] : Пишет\nсообщения
[Kafka] --> [Views ETL] : Передаёт\nсообщения
[Views ETL] --> [Clickhouse] : Сохраняет\nпачками

' --- Billing ---
[Client] --> [Billing] : Оплата/статус
[Billing] --> [Auth] : Авторизация
[Billing] --> [billing_pg]
[Billing] --> [Subscribe Service] : CRUD\nподписок

' --- Notifications & Email ---
[Notification Generator] --> [Notification API] : Получение\nданных
[Notification Generator] --> q_emails : Публикация\nemail задач
[Email Sender] --> q_emails : Получение\nemail задач
[Email Sender] --> q_status : Публикация\nстатуса
[Billing] --> [Notification API] : Данные об оплате
[Auth] --> [Notification API] : Данные об авторизации
[Notification API] --> q_status : Получение\nстатуса
[Notification API] --> [notification_pg]

' --- Subscribe System ---
[Subscribe Controller] --> [Subscribe Service] : Шедулинг\nзапросов
[Subscribe Service] --> [subscribe_pg]

@enduml
